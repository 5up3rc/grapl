{
  "Resources": {
    "mastergraphclusterEcsCluster77253BF4": {
      "Type": "AWS::ECS::Cluster",
      "Metadata": {
        "aws:cdk:path": "mastergraphcluster-stack/mastergraphcluster-EcsCluster/Resource"
      }
    },
    "mastergraphclusterEcsClusterDefaultServiceDiscoveryNamespace826A7C54": {
      "Type": "AWS::ServiceDiscovery::PrivateDnsNamespace",
      "Properties": {
        "Name": "mastergraphcluster.grapl",
        "Vpc": {
          "Fn::ImportValue": "graplvpcs-stack:ExportsOutputRefGraplVPCD95366B5C69BF9D8"
        }
      },
      "Metadata": {
        "aws:cdk:path": "mastergraphcluster-stack/mastergraphcluster-EcsCluster/DefaultServiceDiscoveryNamespace/Resource"
      }
    },
    "mastergraphclusterEcsClustermastergraphclusterZeroGroupCapacityInstanceSecurityGroup19243BEA": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "mastergraphcluster-stack/mastergraphcluster-EcsCluster/mastergraphclusterZeroGroupCapacity/InstanceSecurityGroup",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1"
          }
        ],
        "Tags": [
          {
            "Key": "Name",
            "Value": "mastergraphcluster-stack/mastergraphcluster-EcsCluster/mastergraphclusterZeroGroupCapacity"
          }
        ],
        "VpcId": {
          "Fn::ImportValue": "graplvpcs-stack:ExportsOutputRefGraplVPCD95366B5C69BF9D8"
        }
      },
      "Metadata": {
        "aws:cdk:path": "mastergraphcluster-stack/mastergraphcluster-EcsCluster/mastergraphclusterZeroGroupCapacity/InstanceSecurityGroup/Resource"
      }
    },
    "mastergraphclusterEcsClustermastergraphclusterZeroGroupCapacityInstanceSecurityGroupfrommastergraphclusterstackmastergraphclusterEcsClustermastergraphclusterZeroGroupCapacityInstanceSecurityGroupBE8E2333ALLPORTS48C0261E": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "IpProtocol": "tcp",
        "Description": "from mastergraphclusterstackmastergraphclusterEcsClustermastergraphclusterZeroGroupCapacityInstanceSecurityGroupBE8E2333:ALL PORTS",
        "FromPort": 0,
        "GroupId": {
          "Fn::GetAtt": [
            "mastergraphclusterEcsClustermastergraphclusterZeroGroupCapacityInstanceSecurityGroup19243BEA",
            "GroupId"
          ]
        },
        "SourceSecurityGroupId": {
          "Fn::GetAtt": [
            "mastergraphclusterEcsClustermastergraphclusterZeroGroupCapacityInstanceSecurityGroup19243BEA",
            "GroupId"
          ]
        },
        "ToPort": 65535
      },
      "Metadata": {
        "aws:cdk:path": "mastergraphcluster-stack/mastergraphcluster-EcsCluster/mastergraphclusterZeroGroupCapacity/InstanceSecurityGroup/from mastergraphclusterstackmastergraphclusterEcsClustermastergraphclusterZeroGroupCapacityInstanceSecurityGroupBE8E2333:ALL PORTS"
      }
    },
    "mastergraphclusterEcsClustermastergraphclusterZeroGroupCapacityInstanceSecurityGroupfrommastergraphclusterstackmastergraphclusterEcsClustermastergraphclusterAlphaClusterCapacityInstanceSecurityGroup0ED5D6C4ALLPORTSE3BEA028": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "IpProtocol": "tcp",
        "Description": "from mastergraphclusterstackmastergraphclusterEcsClustermastergraphclusterAlphaClusterCapacityInstanceSecurityGroup0ED5D6C4:ALL PORTS",
        "FromPort": 0,
        "GroupId": {
          "Fn::GetAtt": [
            "mastergraphclusterEcsClustermastergraphclusterZeroGroupCapacityInstanceSecurityGroup19243BEA",
            "GroupId"
          ]
        },
        "SourceSecurityGroupId": {
          "Fn::GetAtt": [
            "mastergraphclusterEcsClustermastergraphclusterAlphaClusterCapacityInstanceSecurityGroup646CC376",
            "GroupId"
          ]
        },
        "ToPort": 65535
      },
      "Metadata": {
        "aws:cdk:path": "mastergraphcluster-stack/mastergraphcluster-EcsCluster/mastergraphclusterZeroGroupCapacity/InstanceSecurityGroup/from mastergraphclusterstackmastergraphclusterEcsClustermastergraphclusterAlphaClusterCapacityInstanceSecurityGroup0ED5D6C4:ALL PORTS"
      }
    },
    "mastergraphclusterEcsClustermastergraphclusterZeroGroupCapacityInstanceRoleB8400054": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ec2.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "mastergraphcluster-stack/mastergraphcluster-EcsCluster/mastergraphclusterZeroGroupCapacity"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "mastergraphcluster-stack/mastergraphcluster-EcsCluster/mastergraphclusterZeroGroupCapacity/InstanceRole/Resource"
      }
    },
    "mastergraphclusterEcsClustermastergraphclusterZeroGroupCapacityInstanceRoleDefaultPolicy7C26D9F2": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "ecs:CreateCluster",
                "ecs:DeregisterContainerInstance",
                "ecs:DiscoverPollEndpoint",
                "ecs:Poll",
                "ecs:RegisterContainerInstance",
                "ecs:StartTelemetrySession",
                "ecs:Submit*",
                "ecr:GetAuthorizationToken",
                "logs:CreateLogStream",
                "logs:PutLogEvents"
              ],
              "Effect": "Allow",
              "Resource": "*"
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "mastergraphclusterEcsClustermastergraphclusterZeroGroupCapacityInstanceRoleDefaultPolicy7C26D9F2",
        "Roles": [
          {
            "Ref": "mastergraphclusterEcsClustermastergraphclusterZeroGroupCapacityInstanceRoleB8400054"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "mastergraphcluster-stack/mastergraphcluster-EcsCluster/mastergraphclusterZeroGroupCapacity/InstanceRole/DefaultPolicy/Resource"
      }
    },
    "mastergraphclusterEcsClustermastergraphclusterZeroGroupCapacityInstanceProfileFFFA70AE": {
      "Type": "AWS::IAM::InstanceProfile",
      "Properties": {
        "Roles": [
          {
            "Ref": "mastergraphclusterEcsClustermastergraphclusterZeroGroupCapacityInstanceRoleB8400054"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "mastergraphcluster-stack/mastergraphcluster-EcsCluster/mastergraphclusterZeroGroupCapacity/InstanceProfile"
      }
    },
    "mastergraphclusterEcsClustermastergraphclusterZeroGroupCapacityLaunchConfigF9F390C0": {
      "Type": "AWS::AutoScaling::LaunchConfiguration",
      "Properties": {
        "ImageId": {
          "Ref": "SsmParameterValueawsserviceecsoptimizedamiamazonlinux2recommendedimageidC96584B6F00A464EAD1953AFF4B05118Parameter"
        },
        "InstanceType": "t3a.small",
        "IamInstanceProfile": {
          "Ref": "mastergraphclusterEcsClustermastergraphclusterZeroGroupCapacityInstanceProfileFFFA70AE"
        },
        "SecurityGroups": [
          {
            "Fn::GetAtt": [
              "mastergraphclusterEcsClustermastergraphclusterZeroGroupCapacityInstanceSecurityGroup19243BEA",
              "GroupId"
            ]
          }
        ],
        "UserData": {
          "Fn::Base64": {
            "Fn::Join": [
              "",
              [
                "#!/bin/bash\necho ECS_CLUSTER=",
                {
                  "Ref": "mastergraphclusterEcsCluster77253BF4"
                },
                " >> /etc/ecs/ecs.config\nsudo iptables --insert FORWARD 1 --in-interface docker+ --destination 169.254.169.254/32 --jump DROP\nsudo service iptables save\necho ECS_AWSVPC_BLOCK_IMDS=true >> /etc/ecs/ecs.config"
              ]
            ]
          }
        }
      },
      "DependsOn": [
        "mastergraphclusterEcsClustermastergraphclusterZeroGroupCapacityInstanceRoleDefaultPolicy7C26D9F2",
        "mastergraphclusterEcsClustermastergraphclusterZeroGroupCapacityInstanceRoleB8400054"
      ],
      "Metadata": {
        "aws:cdk:path": "mastergraphcluster-stack/mastergraphcluster-EcsCluster/mastergraphclusterZeroGroupCapacity/LaunchConfig"
      }
    },
    "mastergraphclusterEcsClustermastergraphclusterZeroGroupCapacityASGB05B1989": {
      "Type": "AWS::AutoScaling::AutoScalingGroup",
      "Properties": {
        "MaxSize": "1",
        "MinSize": "1",
        "DesiredCapacity": "1",
        "LaunchConfigurationName": {
          "Ref": "mastergraphclusterEcsClustermastergraphclusterZeroGroupCapacityLaunchConfigF9F390C0"
        },
        "Tags": [
          {
            "Key": "Name",
            "PropagateAtLaunch": true,
            "Value": "mastergraphcluster-stack/mastergraphcluster-EcsCluster/mastergraphclusterZeroGroupCapacity"
          }
        ],
        "VPCZoneIdentifier": [
          {
            "Fn::ImportValue": "graplvpcs-stack:ExportsOutputRefGraplVPCPrivateSubnet1SubnetC6852983C267B947"
          },
          {
            "Fn::ImportValue": "graplvpcs-stack:ExportsOutputRefGraplVPCPrivateSubnet2SubnetDAF9D2E0F9C618F3"
          },
          {
            "Fn::ImportValue": "graplvpcs-stack:ExportsOutputRefGraplVPCPrivateSubnet3SubnetC625644E86F72BC2"
          }
        ]
      },
      "UpdatePolicy": {
        "AutoScalingReplacingUpdate": {
          "WillReplace": true
        },
        "AutoScalingScheduledAction": {
          "IgnoreUnmodifiedGroupSizeProperties": true
        }
      },
      "Metadata": {
        "aws:cdk:path": "mastergraphcluster-stack/mastergraphcluster-EcsCluster/mastergraphclusterZeroGroupCapacity/ASG"
      }
    },
    "mastergraphclusterEcsClustermastergraphclusterZeroGroupCapacityDrainECSHookFunctionServiceRoleD08AFFB7": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ],
        "Tags": [
          {
            "Key": "Name",
            "Value": "mastergraphcluster-stack/mastergraphcluster-EcsCluster/mastergraphclusterZeroGroupCapacity"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "mastergraphcluster-stack/mastergraphcluster-EcsCluster/mastergraphclusterZeroGroupCapacity/DrainECSHook/Function/ServiceRole/Resource"
      }
    },
    "mastergraphclusterEcsClustermastergraphclusterZeroGroupCapacityDrainECSHookFunctionServiceRoleDefaultPolicy1606E026": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "ec2:DescribeInstances",
                "ec2:DescribeInstanceAttribute",
                "ec2:DescribeInstanceStatus",
                "ec2:DescribeHosts"
              ],
              "Effect": "Allow",
              "Resource": "*"
            },
            {
              "Action": "autoscaling:CompleteLifecycleAction",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":autoscaling:us-east-1:251074890252:autoScalingGroup:*:autoScalingGroupName/",
                    {
                      "Ref": "mastergraphclusterEcsClustermastergraphclusterZeroGroupCapacityASGB05B1989"
                    }
                  ]
                ]
              }
            },
            {
              "Action": [
                "ecs:DescribeContainerInstances",
                "ecs:DescribeTasks"
              ],
              "Effect": "Allow",
              "Resource": "*"
            },
            {
              "Action": [
                "ecs:ListContainerInstances",
                "ecs:SubmitContainerStateChange",
                "ecs:SubmitTaskStateChange"
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "mastergraphclusterEcsCluster77253BF4",
                  "Arn"
                ]
              }
            },
            {
              "Action": [
                "ecs:UpdateContainerInstancesState",
                "ecs:ListTasks"
              ],
              "Condition": {
                "ArnEquals": {
                  "ecs:cluster": {
                    "Fn::GetAtt": [
                      "mastergraphclusterEcsCluster77253BF4",
                      "Arn"
                    ]
                  }
                }
              },
              "Effect": "Allow",
              "Resource": "*"
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "mastergraphclusterEcsClustermastergraphclusterZeroGroupCapacityDrainECSHookFunctionServiceRoleDefaultPolicy1606E026",
        "Roles": [
          {
            "Ref": "mastergraphclusterEcsClustermastergraphclusterZeroGroupCapacityDrainECSHookFunctionServiceRoleD08AFFB7"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "mastergraphcluster-stack/mastergraphcluster-EcsCluster/mastergraphclusterZeroGroupCapacity/DrainECSHook/Function/ServiceRole/DefaultPolicy/Resource"
      }
    },
    "mastergraphclusterEcsClustermastergraphclusterZeroGroupCapacityDrainECSHookFunction46B3042C": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "ZipFile": "import boto3, json, os, time\n\necs = boto3.client('ecs')\nautoscaling = boto3.client('autoscaling')\n\n\ndef lambda_handler(event, context):\n  print(json.dumps(event))\n  cluster = os.environ['CLUSTER']\n  snsTopicArn = event['Records'][0]['Sns']['TopicArn']\n  lifecycle_event = json.loads(event['Records'][0]['Sns']['Message'])\n  instance_id = lifecycle_event.get('EC2InstanceId')\n  if not instance_id:\n    print('Got event without EC2InstanceId: %s', json.dumps(event))\n    return\n\n  instance_arn = container_instance_arn(cluster, instance_id)\n  print('Instance %s has container instance ARN %s' % (lifecycle_event['EC2InstanceId'], instance_arn))\n\n  if not instance_arn:\n    return\n\n  while has_tasks(cluster, instance_arn):\n    time.sleep(10)\n\n  try:\n    print('Terminating instance %s' % instance_id)\n    autoscaling.complete_lifecycle_action(\n        LifecycleActionResult='CONTINUE',\n        **pick(lifecycle_event, 'LifecycleHookName', 'LifecycleActionToken', 'AutoScalingGroupName'))\n  except Exception as e:\n    # Lifecycle action may have already completed.\n    print(str(e))\n\n\ndef container_instance_arn(cluster, instance_id):\n  \"\"\"Turn an instance ID into a container instance ARN.\"\"\"\n  arns = ecs.list_container_instances(cluster=cluster, filter='ec2InstanceId==' + instance_id)['containerInstanceArns']\n  if not arns:\n    return None\n  return arns[0]\n\n\ndef has_tasks(cluster, instance_arn):\n  \"\"\"Return True if the instance is running tasks for the given cluster.\"\"\"\n  instances = ecs.describe_container_instances(cluster=cluster, containerInstances=[instance_arn])['containerInstances']\n  if not instances:\n    return False\n  instance = instances[0]\n\n  if instance['status'] == 'ACTIVE':\n    # Start draining, then try again later\n    set_container_instance_to_draining(cluster, instance_arn)\n    return True\n\n  tasks = instance['runningTasksCount'] + instance['pendingTasksCount']\n  print('Instance %s has %s tasks' % (instance_arn, tasks))\n\n  return tasks > 0\n\n\ndef set_container_instance_to_draining(cluster, instance_arn):\n  ecs.update_container_instances_state(\n      cluster=cluster,\n      containerInstances=[instance_arn], status='DRAINING')\n\n\ndef pick(dct, *keys):\n  \"\"\"Pick a subset of a dict.\"\"\"\n  return {k: v for k, v in dct.items() if k in keys}\n"
        },
        "Handler": "index.lambda_handler",
        "Role": {
          "Fn::GetAtt": [
            "mastergraphclusterEcsClustermastergraphclusterZeroGroupCapacityDrainECSHookFunctionServiceRoleD08AFFB7",
            "Arn"
          ]
        },
        "Runtime": "python3.6",
        "Environment": {
          "Variables": {
            "CLUSTER": {
              "Ref": "mastergraphclusterEcsCluster77253BF4"
            }
          }
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "mastergraphcluster-stack/mastergraphcluster-EcsCluster/mastergraphclusterZeroGroupCapacity"
          }
        ],
        "Timeout": 310
      },
      "DependsOn": [
        "mastergraphclusterEcsClustermastergraphclusterZeroGroupCapacityDrainECSHookFunctionServiceRoleDefaultPolicy1606E026",
        "mastergraphclusterEcsClustermastergraphclusterZeroGroupCapacityDrainECSHookFunctionServiceRoleD08AFFB7"
      ],
      "Metadata": {
        "aws:cdk:path": "mastergraphcluster-stack/mastergraphcluster-EcsCluster/mastergraphclusterZeroGroupCapacity/DrainECSHook/Function/Resource"
      }
    },
    "mastergraphclusterEcsClustermastergraphclusterZeroGroupCapacityDrainECSHookFunctionAllowInvokemastergraphclusterstackmastergraphclusterEcsClustermastergraphclusterZeroGroupCapacityLifecycleHookDrainHookTopicE8934AEB85F9AAFB": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "mastergraphclusterEcsClustermastergraphclusterZeroGroupCapacityDrainECSHookFunction46B3042C",
            "Arn"
          ]
        },
        "Principal": "sns.amazonaws.com",
        "SourceArn": {
          "Ref": "mastergraphclusterEcsClustermastergraphclusterZeroGroupCapacityLifecycleHookDrainHookTopic5127E9BC"
        }
      },
      "Metadata": {
        "aws:cdk:path": "mastergraphcluster-stack/mastergraphcluster-EcsCluster/mastergraphclusterZeroGroupCapacity/DrainECSHook/Function/AllowInvoke:mastergraphclusterstackmastergraphclusterEcsClustermastergraphclusterZeroGroupCapacityLifecycleHookDrainHookTopicE8934AEB"
      }
    },
    "mastergraphclusterEcsClustermastergraphclusterZeroGroupCapacityDrainECSHookFunctionTopic6E5BB743": {
      "Type": "AWS::SNS::Subscription",
      "Properties": {
        "Protocol": "lambda",
        "TopicArn": {
          "Ref": "mastergraphclusterEcsClustermastergraphclusterZeroGroupCapacityLifecycleHookDrainHookTopic5127E9BC"
        },
        "Endpoint": {
          "Fn::GetAtt": [
            "mastergraphclusterEcsClustermastergraphclusterZeroGroupCapacityDrainECSHookFunction46B3042C",
            "Arn"
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "mastergraphcluster-stack/mastergraphcluster-EcsCluster/mastergraphclusterZeroGroupCapacity/DrainECSHook/Function/Topic/Resource"
      }
    },
    "mastergraphclusterEcsClustermastergraphclusterZeroGroupCapacityLifecycleHookDrainHookRole4A429E18": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "autoscaling.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "mastergraphcluster-stack/mastergraphcluster-EcsCluster/mastergraphclusterZeroGroupCapacity"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "mastergraphcluster-stack/mastergraphcluster-EcsCluster/mastergraphclusterZeroGroupCapacity/LifecycleHookDrainHook/Role/Resource"
      }
    },
    "mastergraphclusterEcsClustermastergraphclusterZeroGroupCapacityLifecycleHookDrainHookRoleDefaultPolicy5CC440A4": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "sns:Publish",
              "Effect": "Allow",
              "Resource": {
                "Ref": "mastergraphclusterEcsClustermastergraphclusterZeroGroupCapacityLifecycleHookDrainHookTopic5127E9BC"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "mastergraphclusterEcsClustermastergraphclusterZeroGroupCapacityLifecycleHookDrainHookRoleDefaultPolicy5CC440A4",
        "Roles": [
          {
            "Ref": "mastergraphclusterEcsClustermastergraphclusterZeroGroupCapacityLifecycleHookDrainHookRole4A429E18"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "mastergraphcluster-stack/mastergraphcluster-EcsCluster/mastergraphclusterZeroGroupCapacity/LifecycleHookDrainHook/Role/DefaultPolicy/Resource"
      }
    },
    "mastergraphclusterEcsClustermastergraphclusterZeroGroupCapacityLifecycleHookDrainHookTopic5127E9BC": {
      "Type": "AWS::SNS::Topic",
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "mastergraphcluster-stack/mastergraphcluster-EcsCluster/mastergraphclusterZeroGroupCapacity"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "mastergraphcluster-stack/mastergraphcluster-EcsCluster/mastergraphclusterZeroGroupCapacity/LifecycleHookDrainHook/Topic/Resource"
      }
    },
    "mastergraphclusterEcsClustermastergraphclusterZeroGroupCapacityLifecycleHookDrainHookA9BF5580": {
      "Type": "AWS::AutoScaling::LifecycleHook",
      "Properties": {
        "AutoScalingGroupName": {
          "Ref": "mastergraphclusterEcsClustermastergraphclusterZeroGroupCapacityASGB05B1989"
        },
        "LifecycleTransition": "autoscaling:EC2_INSTANCE_TERMINATING",
        "DefaultResult": "CONTINUE",
        "HeartbeatTimeout": 300,
        "NotificationTargetARN": {
          "Ref": "mastergraphclusterEcsClustermastergraphclusterZeroGroupCapacityLifecycleHookDrainHookTopic5127E9BC"
        },
        "RoleARN": {
          "Fn::GetAtt": [
            "mastergraphclusterEcsClustermastergraphclusterZeroGroupCapacityLifecycleHookDrainHookRole4A429E18",
            "Arn"
          ]
        }
      },
      "DependsOn": [
        "mastergraphclusterEcsClustermastergraphclusterZeroGroupCapacityLifecycleHookDrainHookRoleDefaultPolicy5CC440A4",
        "mastergraphclusterEcsClustermastergraphclusterZeroGroupCapacityLifecycleHookDrainHookRole4A429E18"
      ],
      "Metadata": {
        "aws:cdk:path": "mastergraphcluster-stack/mastergraphcluster-EcsCluster/mastergraphclusterZeroGroupCapacity/LifecycleHookDrainHook/Resource"
      }
    },
    "mastergraphclusterEcsClustermastergraphclusterAlphaClusterCapacityInstanceSecurityGroup646CC376": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "mastergraphcluster-stack/mastergraphcluster-EcsCluster/mastergraphclusterAlphaClusterCapacity/InstanceSecurityGroup",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1"
          }
        ],
        "Tags": [
          {
            "Key": "Name",
            "Value": "mastergraphcluster-stack/mastergraphcluster-EcsCluster/mastergraphclusterAlphaClusterCapacity"
          }
        ],
        "VpcId": {
          "Fn::ImportValue": "graplvpcs-stack:ExportsOutputRefGraplVPCD95366B5C69BF9D8"
        }
      },
      "Metadata": {
        "aws:cdk:path": "mastergraphcluster-stack/mastergraphcluster-EcsCluster/mastergraphclusterAlphaClusterCapacity/InstanceSecurityGroup/Resource"
      }
    },
    "mastergraphclusterEcsClustermastergraphclusterAlphaClusterCapacityInstanceSecurityGroupfrommastergraphclusterstackmastergraphclusterEcsClustermastergraphclusterZeroGroupCapacityInstanceSecurityGroupBE8E2333ALLPORTS55132933": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "IpProtocol": "tcp",
        "Description": "from mastergraphclusterstackmastergraphclusterEcsClustermastergraphclusterZeroGroupCapacityInstanceSecurityGroupBE8E2333:ALL PORTS",
        "FromPort": 0,
        "GroupId": {
          "Fn::GetAtt": [
            "mastergraphclusterEcsClustermastergraphclusterAlphaClusterCapacityInstanceSecurityGroup646CC376",
            "GroupId"
          ]
        },
        "SourceSecurityGroupId": {
          "Fn::GetAtt": [
            "mastergraphclusterEcsClustermastergraphclusterZeroGroupCapacityInstanceSecurityGroup19243BEA",
            "GroupId"
          ]
        },
        "ToPort": 65535
      },
      "Metadata": {
        "aws:cdk:path": "mastergraphcluster-stack/mastergraphcluster-EcsCluster/mastergraphclusterAlphaClusterCapacity/InstanceSecurityGroup/from mastergraphclusterstackmastergraphclusterEcsClustermastergraphclusterZeroGroupCapacityInstanceSecurityGroupBE8E2333:ALL PORTS"
      }
    },
    "mastergraphclusterEcsClustermastergraphclusterAlphaClusterCapacityInstanceSecurityGroupfrommastergraphclusterstackmastergraphclusterEcsClustermastergraphclusterAlphaClusterCapacityInstanceSecurityGroup0ED5D6C4ALLPORTS34A4325F": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "IpProtocol": "tcp",
        "Description": "from mastergraphclusterstackmastergraphclusterEcsClustermastergraphclusterAlphaClusterCapacityInstanceSecurityGroup0ED5D6C4:ALL PORTS",
        "FromPort": 0,
        "GroupId": {
          "Fn::GetAtt": [
            "mastergraphclusterEcsClustermastergraphclusterAlphaClusterCapacityInstanceSecurityGroup646CC376",
            "GroupId"
          ]
        },
        "SourceSecurityGroupId": {
          "Fn::GetAtt": [
            "mastergraphclusterEcsClustermastergraphclusterAlphaClusterCapacityInstanceSecurityGroup646CC376",
            "GroupId"
          ]
        },
        "ToPort": 65535
      },
      "Metadata": {
        "aws:cdk:path": "mastergraphcluster-stack/mastergraphcluster-EcsCluster/mastergraphclusterAlphaClusterCapacity/InstanceSecurityGroup/from mastergraphclusterstackmastergraphclusterEcsClustermastergraphclusterAlphaClusterCapacityInstanceSecurityGroup0ED5D6C4:ALL PORTS"
      }
    },
    "mastergraphclusterEcsClustermastergraphclusterAlphaClusterCapacityInstanceRole5DB25E0E": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ec2.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "mastergraphcluster-stack/mastergraphcluster-EcsCluster/mastergraphclusterAlphaClusterCapacity"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "mastergraphcluster-stack/mastergraphcluster-EcsCluster/mastergraphclusterAlphaClusterCapacity/InstanceRole/Resource"
      }
    },
    "mastergraphclusterEcsClustermastergraphclusterAlphaClusterCapacityInstanceRoleDefaultPolicyA170B07F": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "ecs:CreateCluster",
                "ecs:DeregisterContainerInstance",
                "ecs:DiscoverPollEndpoint",
                "ecs:Poll",
                "ecs:RegisterContainerInstance",
                "ecs:StartTelemetrySession",
                "ecs:Submit*",
                "ecr:GetAuthorizationToken",
                "logs:CreateLogStream",
                "logs:PutLogEvents"
              ],
              "Effect": "Allow",
              "Resource": "*"
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "mastergraphclusterEcsClustermastergraphclusterAlphaClusterCapacityInstanceRoleDefaultPolicyA170B07F",
        "Roles": [
          {
            "Ref": "mastergraphclusterEcsClustermastergraphclusterAlphaClusterCapacityInstanceRole5DB25E0E"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "mastergraphcluster-stack/mastergraphcluster-EcsCluster/mastergraphclusterAlphaClusterCapacity/InstanceRole/DefaultPolicy/Resource"
      }
    },
    "mastergraphclusterEcsClustermastergraphclusterAlphaClusterCapacityInstanceProfile91635556": {
      "Type": "AWS::IAM::InstanceProfile",
      "Properties": {
        "Roles": [
          {
            "Ref": "mastergraphclusterEcsClustermastergraphclusterAlphaClusterCapacityInstanceRole5DB25E0E"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "mastergraphcluster-stack/mastergraphcluster-EcsCluster/mastergraphclusterAlphaClusterCapacity/InstanceProfile"
      }
    },
    "mastergraphclusterEcsClustermastergraphclusterAlphaClusterCapacityLaunchConfig9FB4F639": {
      "Type": "AWS::AutoScaling::LaunchConfiguration",
      "Properties": {
        "ImageId": {
          "Ref": "SsmParameterValueawsserviceecsoptimizedamiamazonlinux2recommendedimageidC96584B6F00A464EAD1953AFF4B05118Parameter"
        },
        "InstanceType": "t3a.medium",
        "IamInstanceProfile": {
          "Ref": "mastergraphclusterEcsClustermastergraphclusterAlphaClusterCapacityInstanceProfile91635556"
        },
        "SecurityGroups": [
          {
            "Fn::GetAtt": [
              "mastergraphclusterEcsClustermastergraphclusterAlphaClusterCapacityInstanceSecurityGroup646CC376",
              "GroupId"
            ]
          }
        ],
        "UserData": {
          "Fn::Base64": {
            "Fn::Join": [
              "",
              [
                "#!/bin/bash\necho ECS_CLUSTER=",
                {
                  "Ref": "mastergraphclusterEcsCluster77253BF4"
                },
                " >> /etc/ecs/ecs.config\nsudo iptables --insert FORWARD 1 --in-interface docker+ --destination 169.254.169.254/32 --jump DROP\nsudo service iptables save\necho ECS_AWSVPC_BLOCK_IMDS=true >> /etc/ecs/ecs.config"
              ]
            ]
          }
        }
      },
      "DependsOn": [
        "mastergraphclusterEcsClustermastergraphclusterAlphaClusterCapacityInstanceRoleDefaultPolicyA170B07F",
        "mastergraphclusterEcsClustermastergraphclusterAlphaClusterCapacityInstanceRole5DB25E0E"
      ],
      "Metadata": {
        "aws:cdk:path": "mastergraphcluster-stack/mastergraphcluster-EcsCluster/mastergraphclusterAlphaClusterCapacity/LaunchConfig"
      }
    },
    "mastergraphclusterEcsClustermastergraphclusterAlphaClusterCapacityASGC586CA8E": {
      "Type": "AWS::AutoScaling::AutoScalingGroup",
      "Properties": {
        "MaxSize": "1",
        "MinSize": "1",
        "DesiredCapacity": "1",
        "LaunchConfigurationName": {
          "Ref": "mastergraphclusterEcsClustermastergraphclusterAlphaClusterCapacityLaunchConfig9FB4F639"
        },
        "Tags": [
          {
            "Key": "Name",
            "PropagateAtLaunch": true,
            "Value": "mastergraphcluster-stack/mastergraphcluster-EcsCluster/mastergraphclusterAlphaClusterCapacity"
          }
        ],
        "VPCZoneIdentifier": [
          {
            "Fn::ImportValue": "graplvpcs-stack:ExportsOutputRefGraplVPCPrivateSubnet1SubnetC6852983C267B947"
          },
          {
            "Fn::ImportValue": "graplvpcs-stack:ExportsOutputRefGraplVPCPrivateSubnet2SubnetDAF9D2E0F9C618F3"
          },
          {
            "Fn::ImportValue": "graplvpcs-stack:ExportsOutputRefGraplVPCPrivateSubnet3SubnetC625644E86F72BC2"
          }
        ]
      },
      "UpdatePolicy": {
        "AutoScalingReplacingUpdate": {
          "WillReplace": true
        },
        "AutoScalingScheduledAction": {
          "IgnoreUnmodifiedGroupSizeProperties": true
        }
      },
      "Metadata": {
        "aws:cdk:path": "mastergraphcluster-stack/mastergraphcluster-EcsCluster/mastergraphclusterAlphaClusterCapacity/ASG"
      }
    },
    "mastergraphclusterEcsClustermastergraphclusterAlphaClusterCapacityDrainECSHookFunctionServiceRole62FE86B2": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ],
        "Tags": [
          {
            "Key": "Name",
            "Value": "mastergraphcluster-stack/mastergraphcluster-EcsCluster/mastergraphclusterAlphaClusterCapacity"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "mastergraphcluster-stack/mastergraphcluster-EcsCluster/mastergraphclusterAlphaClusterCapacity/DrainECSHook/Function/ServiceRole/Resource"
      }
    },
    "mastergraphclusterEcsClustermastergraphclusterAlphaClusterCapacityDrainECSHookFunctionServiceRoleDefaultPolicy67CA898C": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "ec2:DescribeInstances",
                "ec2:DescribeInstanceAttribute",
                "ec2:DescribeInstanceStatus",
                "ec2:DescribeHosts"
              ],
              "Effect": "Allow",
              "Resource": "*"
            },
            {
              "Action": "autoscaling:CompleteLifecycleAction",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":autoscaling:us-east-1:251074890252:autoScalingGroup:*:autoScalingGroupName/",
                    {
                      "Ref": "mastergraphclusterEcsClustermastergraphclusterAlphaClusterCapacityASGC586CA8E"
                    }
                  ]
                ]
              }
            },
            {
              "Action": [
                "ecs:DescribeContainerInstances",
                "ecs:DescribeTasks"
              ],
              "Effect": "Allow",
              "Resource": "*"
            },
            {
              "Action": [
                "ecs:ListContainerInstances",
                "ecs:SubmitContainerStateChange",
                "ecs:SubmitTaskStateChange"
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "mastergraphclusterEcsCluster77253BF4",
                  "Arn"
                ]
              }
            },
            {
              "Action": [
                "ecs:UpdateContainerInstancesState",
                "ecs:ListTasks"
              ],
              "Condition": {
                "ArnEquals": {
                  "ecs:cluster": {
                    "Fn::GetAtt": [
                      "mastergraphclusterEcsCluster77253BF4",
                      "Arn"
                    ]
                  }
                }
              },
              "Effect": "Allow",
              "Resource": "*"
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "mastergraphclusterEcsClustermastergraphclusterAlphaClusterCapacityDrainECSHookFunctionServiceRoleDefaultPolicy67CA898C",
        "Roles": [
          {
            "Ref": "mastergraphclusterEcsClustermastergraphclusterAlphaClusterCapacityDrainECSHookFunctionServiceRole62FE86B2"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "mastergraphcluster-stack/mastergraphcluster-EcsCluster/mastergraphclusterAlphaClusterCapacity/DrainECSHook/Function/ServiceRole/DefaultPolicy/Resource"
      }
    },
    "mastergraphclusterEcsClustermastergraphclusterAlphaClusterCapacityDrainECSHookFunctionD7833A14": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "ZipFile": "import boto3, json, os, time\n\necs = boto3.client('ecs')\nautoscaling = boto3.client('autoscaling')\n\n\ndef lambda_handler(event, context):\n  print(json.dumps(event))\n  cluster = os.environ['CLUSTER']\n  snsTopicArn = event['Records'][0]['Sns']['TopicArn']\n  lifecycle_event = json.loads(event['Records'][0]['Sns']['Message'])\n  instance_id = lifecycle_event.get('EC2InstanceId')\n  if not instance_id:\n    print('Got event without EC2InstanceId: %s', json.dumps(event))\n    return\n\n  instance_arn = container_instance_arn(cluster, instance_id)\n  print('Instance %s has container instance ARN %s' % (lifecycle_event['EC2InstanceId'], instance_arn))\n\n  if not instance_arn:\n    return\n\n  while has_tasks(cluster, instance_arn):\n    time.sleep(10)\n\n  try:\n    print('Terminating instance %s' % instance_id)\n    autoscaling.complete_lifecycle_action(\n        LifecycleActionResult='CONTINUE',\n        **pick(lifecycle_event, 'LifecycleHookName', 'LifecycleActionToken', 'AutoScalingGroupName'))\n  except Exception as e:\n    # Lifecycle action may have already completed.\n    print(str(e))\n\n\ndef container_instance_arn(cluster, instance_id):\n  \"\"\"Turn an instance ID into a container instance ARN.\"\"\"\n  arns = ecs.list_container_instances(cluster=cluster, filter='ec2InstanceId==' + instance_id)['containerInstanceArns']\n  if not arns:\n    return None\n  return arns[0]\n\n\ndef has_tasks(cluster, instance_arn):\n  \"\"\"Return True if the instance is running tasks for the given cluster.\"\"\"\n  instances = ecs.describe_container_instances(cluster=cluster, containerInstances=[instance_arn])['containerInstances']\n  if not instances:\n    return False\n  instance = instances[0]\n\n  if instance['status'] == 'ACTIVE':\n    # Start draining, then try again later\n    set_container_instance_to_draining(cluster, instance_arn)\n    return True\n\n  tasks = instance['runningTasksCount'] + instance['pendingTasksCount']\n  print('Instance %s has %s tasks' % (instance_arn, tasks))\n\n  return tasks > 0\n\n\ndef set_container_instance_to_draining(cluster, instance_arn):\n  ecs.update_container_instances_state(\n      cluster=cluster,\n      containerInstances=[instance_arn], status='DRAINING')\n\n\ndef pick(dct, *keys):\n  \"\"\"Pick a subset of a dict.\"\"\"\n  return {k: v for k, v in dct.items() if k in keys}\n"
        },
        "Handler": "index.lambda_handler",
        "Role": {
          "Fn::GetAtt": [
            "mastergraphclusterEcsClustermastergraphclusterAlphaClusterCapacityDrainECSHookFunctionServiceRole62FE86B2",
            "Arn"
          ]
        },
        "Runtime": "python3.6",
        "Environment": {
          "Variables": {
            "CLUSTER": {
              "Ref": "mastergraphclusterEcsCluster77253BF4"
            }
          }
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "mastergraphcluster-stack/mastergraphcluster-EcsCluster/mastergraphclusterAlphaClusterCapacity"
          }
        ],
        "Timeout": 310
      },
      "DependsOn": [
        "mastergraphclusterEcsClustermastergraphclusterAlphaClusterCapacityDrainECSHookFunctionServiceRoleDefaultPolicy67CA898C",
        "mastergraphclusterEcsClustermastergraphclusterAlphaClusterCapacityDrainECSHookFunctionServiceRole62FE86B2"
      ],
      "Metadata": {
        "aws:cdk:path": "mastergraphcluster-stack/mastergraphcluster-EcsCluster/mastergraphclusterAlphaClusterCapacity/DrainECSHook/Function/Resource"
      }
    },
    "mastergraphclusterEcsClustermastergraphclusterAlphaClusterCapacityDrainECSHookFunctionAllowInvokemastergraphclusterstackmastergraphclusterEcsClustermastergraphclusterAlphaClusterCapacityLifecycleHookDrainHookTopic8F8E6E2A605A0CD3": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "mastergraphclusterEcsClustermastergraphclusterAlphaClusterCapacityDrainECSHookFunctionD7833A14",
            "Arn"
          ]
        },
        "Principal": "sns.amazonaws.com",
        "SourceArn": {
          "Ref": "mastergraphclusterEcsClustermastergraphclusterAlphaClusterCapacityLifecycleHookDrainHookTopic13212320"
        }
      },
      "Metadata": {
        "aws:cdk:path": "mastergraphcluster-stack/mastergraphcluster-EcsCluster/mastergraphclusterAlphaClusterCapacity/DrainECSHook/Function/AllowInvoke:mastergraphclusterstackmastergraphclusterEcsClustermastergraphclusterAlphaClusterCapacityLifecycleHookDrainHookTopic8F8E6E2A"
      }
    },
    "mastergraphclusterEcsClustermastergraphclusterAlphaClusterCapacityDrainECSHookFunctionTopicE10AE0C8": {
      "Type": "AWS::SNS::Subscription",
      "Properties": {
        "Protocol": "lambda",
        "TopicArn": {
          "Ref": "mastergraphclusterEcsClustermastergraphclusterAlphaClusterCapacityLifecycleHookDrainHookTopic13212320"
        },
        "Endpoint": {
          "Fn::GetAtt": [
            "mastergraphclusterEcsClustermastergraphclusterAlphaClusterCapacityDrainECSHookFunctionD7833A14",
            "Arn"
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "mastergraphcluster-stack/mastergraphcluster-EcsCluster/mastergraphclusterAlphaClusterCapacity/DrainECSHook/Function/Topic/Resource"
      }
    },
    "mastergraphclusterEcsClustermastergraphclusterAlphaClusterCapacityLifecycleHookDrainHookRole3DA4BEFD": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "autoscaling.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "mastergraphcluster-stack/mastergraphcluster-EcsCluster/mastergraphclusterAlphaClusterCapacity"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "mastergraphcluster-stack/mastergraphcluster-EcsCluster/mastergraphclusterAlphaClusterCapacity/LifecycleHookDrainHook/Role/Resource"
      }
    },
    "mastergraphclusterEcsClustermastergraphclusterAlphaClusterCapacityLifecycleHookDrainHookRoleDefaultPolicyF3D22B0F": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "sns:Publish",
              "Effect": "Allow",
              "Resource": {
                "Ref": "mastergraphclusterEcsClustermastergraphclusterAlphaClusterCapacityLifecycleHookDrainHookTopic13212320"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "mastergraphclusterEcsClustermastergraphclusterAlphaClusterCapacityLifecycleHookDrainHookRoleDefaultPolicyF3D22B0F",
        "Roles": [
          {
            "Ref": "mastergraphclusterEcsClustermastergraphclusterAlphaClusterCapacityLifecycleHookDrainHookRole3DA4BEFD"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "mastergraphcluster-stack/mastergraphcluster-EcsCluster/mastergraphclusterAlphaClusterCapacity/LifecycleHookDrainHook/Role/DefaultPolicy/Resource"
      }
    },
    "mastergraphclusterEcsClustermastergraphclusterAlphaClusterCapacityLifecycleHookDrainHookTopic13212320": {
      "Type": "AWS::SNS::Topic",
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "mastergraphcluster-stack/mastergraphcluster-EcsCluster/mastergraphclusterAlphaClusterCapacity"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "mastergraphcluster-stack/mastergraphcluster-EcsCluster/mastergraphclusterAlphaClusterCapacity/LifecycleHookDrainHook/Topic/Resource"
      }
    },
    "mastergraphclusterEcsClustermastergraphclusterAlphaClusterCapacityLifecycleHookDrainHook45B23C34": {
      "Type": "AWS::AutoScaling::LifecycleHook",
      "Properties": {
        "AutoScalingGroupName": {
          "Ref": "mastergraphclusterEcsClustermastergraphclusterAlphaClusterCapacityASGC586CA8E"
        },
        "LifecycleTransition": "autoscaling:EC2_INSTANCE_TERMINATING",
        "DefaultResult": "CONTINUE",
        "HeartbeatTimeout": 300,
        "NotificationTargetARN": {
          "Ref": "mastergraphclusterEcsClustermastergraphclusterAlphaClusterCapacityLifecycleHookDrainHookTopic13212320"
        },
        "RoleARN": {
          "Fn::GetAtt": [
            "mastergraphclusterEcsClustermastergraphclusterAlphaClusterCapacityLifecycleHookDrainHookRole3DA4BEFD",
            "Arn"
          ]
        }
      },
      "DependsOn": [
        "mastergraphclusterEcsClustermastergraphclusterAlphaClusterCapacityLifecycleHookDrainHookRoleDefaultPolicyF3D22B0F",
        "mastergraphclusterEcsClustermastergraphclusterAlphaClusterCapacityLifecycleHookDrainHookRole3DA4BEFD"
      ],
      "Metadata": {
        "aws:cdk:path": "mastergraphcluster-stack/mastergraphcluster-EcsCluster/mastergraphclusterAlphaClusterCapacity/LifecycleHookDrainHook/Resource"
      }
    },
    "zero0TaskRoleEE59431D": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ecs-tasks.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        }
      },
      "Metadata": {
        "aws:cdk:path": "mastergraphcluster-stack/zero0/TaskRole/Resource"
      }
    },
    "zero08F294ACF": {
      "Type": "AWS::ECS::TaskDefinition",
      "Properties": {
        "ContainerDefinitions": [
          {
            "Command": [
              "dgraph",
              "zero",
              "--my=zero0.mastergraphcluster.grapl:5080",
              "--replicas=3",
              "--idx=1",
              "--alsologtostderr"
            ],
            "Essential": true,
            "Image": "dgraph/dgraph:1.1.1",
            "LogConfiguration": {
              "LogDriver": "awslogs",
              "Options": {
                "awslogs-group": {
                  "Ref": "zero0zero0mastergraphclusterContainerLogGroup786869D2"
                },
                "awslogs-stream-prefix": "ecsmastergraphclusterzero0",
                "awslogs-region": "us-east-1"
              }
            },
            "MemoryReservation": 1024,
            "Name": "zero0mastergraphclusterContainer"
          }
        ],
        "ExecutionRoleArn": {
          "Fn::GetAtt": [
            "zero0ExecutionRoleA355877C",
            "Arn"
          ]
        },
        "Family": "mastergraphclusterstackzero06BA3B3C2",
        "NetworkMode": "awsvpc",
        "RequiresCompatibilities": [
          "EC2"
        ],
        "TaskRoleArn": {
          "Fn::GetAtt": [
            "zero0TaskRoleEE59431D",
            "Arn"
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "mastergraphcluster-stack/zero0/Resource"
      }
    },
    "zero0zero0mastergraphclusterContainerLogGroup786869D2": {
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
      "DeletionPolicy": "Retain",
      "Metadata": {
        "aws:cdk:path": "mastergraphcluster-stack/zero0/zero0mastergraphclusterContainer/LogGroup/Resource"
      }
    },
    "zero0ExecutionRoleA355877C": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ecs-tasks.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        }
      },
      "Metadata": {
        "aws:cdk:path": "mastergraphcluster-stack/zero0/ExecutionRole/Resource"
      }
    },
    "zero0ExecutionRoleDefaultPolicy62EFE539": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "logs:CreateLogStream",
                "logs:PutLogEvents"
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "zero0zero0mastergraphclusterContainerLogGroup786869D2",
                  "Arn"
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "zero0ExecutionRoleDefaultPolicy62EFE539",
        "Roles": [
          {
            "Ref": "zero0ExecutionRoleA355877C"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "mastergraphcluster-stack/zero0/ExecutionRole/DefaultPolicy/Resource"
      }
    },
    "zero0Service951A01B8": {
      "Type": "AWS::ECS::Service",
      "Properties": {
        "Cluster": {
          "Ref": "mastergraphclusterEcsCluster77253BF4"
        },
        "DeploymentConfiguration": {
          "MaximumPercent": 200,
          "MinimumHealthyPercent": 50
        },
        "DesiredCount": 1,
        "EnableECSManagedTags": false,
        "LaunchType": "EC2",
        "NetworkConfiguration": {
          "AwsvpcConfiguration": {
            "AssignPublicIp": "DISABLED",
            "SecurityGroups": [
              {
                "Fn::GetAtt": [
                  "zero0ServiceSecurityGroup3E01EBC7",
                  "GroupId"
                ]
              }
            ],
            "Subnets": [
              {
                "Fn::ImportValue": "graplvpcs-stack:ExportsOutputRefGraplVPCPrivateSubnet1SubnetC6852983C267B947"
              },
              {
                "Fn::ImportValue": "graplvpcs-stack:ExportsOutputRefGraplVPCPrivateSubnet2SubnetDAF9D2E0F9C618F3"
              },
              {
                "Fn::ImportValue": "graplvpcs-stack:ExportsOutputRefGraplVPCPrivateSubnet3SubnetC625644E86F72BC2"
              }
            ]
          }
        },
        "SchedulingStrategy": "REPLICA",
        "ServiceRegistries": [
          {
            "RegistryArn": {
              "Fn::GetAtt": [
                "zero0ServiceCloudmapService6C0F1AC1",
                "Arn"
              ]
            }
          }
        ],
        "TaskDefinition": {
          "Ref": "zero08F294ACF"
        }
      },
      "Metadata": {
        "aws:cdk:path": "mastergraphcluster-stack/zero0Service/Service"
      }
    },
    "zero0ServiceCloudmapService6C0F1AC1": {
      "Type": "AWS::ServiceDiscovery::Service",
      "Properties": {
        "DnsConfig": {
          "DnsRecords": [
            {
              "TTL": 60,
              "Type": "A"
            }
          ],
          "NamespaceId": {
            "Fn::GetAtt": [
              "mastergraphclusterEcsClusterDefaultServiceDiscoveryNamespace826A7C54",
              "Id"
            ]
          },
          "RoutingPolicy": "MULTIVALUE"
        },
        "HealthCheckCustomConfig": {
          "FailureThreshold": 1
        },
        "Name": "zero0",
        "NamespaceId": {
          "Fn::GetAtt": [
            "mastergraphclusterEcsClusterDefaultServiceDiscoveryNamespace826A7C54",
            "Id"
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "mastergraphcluster-stack/zero0Service/CloudmapService/Resource"
      }
    },
    "zero0ServiceSecurityGroup3E01EBC7": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "mastergraphcluster-stack/zero0Service/SecurityGroup",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1"
          }
        ],
        "SecurityGroupIngress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "from 0.0.0.0/0:ALL PORTS",
            "FromPort": 0,
            "IpProtocol": "tcp",
            "ToPort": 65535
          }
        ],
        "VpcId": {
          "Fn::ImportValue": "graplvpcs-stack:ExportsOutputRefGraplVPCD95366B5C69BF9D8"
        }
      },
      "Metadata": {
        "aws:cdk:path": "mastergraphcluster-stack/zero0Service/SecurityGroup/Resource"
      }
    },
    "alpha0TaskRoleD2789A69": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ecs-tasks.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        }
      },
      "Metadata": {
        "aws:cdk:path": "mastergraphcluster-stack/alpha0/TaskRole/Resource"
      }
    },
    "alpha0CA0EDE27": {
      "Type": "AWS::ECS::TaskDefinition",
      "Properties": {
        "ContainerDefinitions": [
          {
            "Command": [
              "dgraph",
              "alpha",
              "--my=alpha0.mastergraphcluster.grapl:7080",
              "--lru_mb=1024",
              "--zero=$zero0.mastergraphcluster.grapl:5080",
              "--alsologtostderr"
            ],
            "Essential": true,
            "Image": "dgraph/dgraph:1.1.1",
            "LogConfiguration": {
              "LogDriver": "awslogs",
              "Options": {
                "awslogs-group": {
                  "Ref": "alpha0alpha0mastergraphclusterContainerLogGroupE978ADBD"
                },
                "awslogs-stream-prefix": "ecsmastergraphclusteralpha0",
                "awslogs-region": "us-east-1"
              }
            },
            "MemoryReservation": 2048,
            "Name": "alpha0mastergraphclusterContainer"
          }
        ],
        "ExecutionRoleArn": {
          "Fn::GetAtt": [
            "alpha0ExecutionRole10945257",
            "Arn"
          ]
        },
        "Family": "mastergraphclusterstackalpha01D481725",
        "NetworkMode": "awsvpc",
        "RequiresCompatibilities": [
          "EC2"
        ],
        "TaskRoleArn": {
          "Fn::GetAtt": [
            "alpha0TaskRoleD2789A69",
            "Arn"
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "mastergraphcluster-stack/alpha0/Resource"
      }
    },
    "alpha0alpha0mastergraphclusterContainerLogGroupE978ADBD": {
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
      "DeletionPolicy": "Retain",
      "Metadata": {
        "aws:cdk:path": "mastergraphcluster-stack/alpha0/alpha0mastergraphclusterContainer/LogGroup/Resource"
      }
    },
    "alpha0ExecutionRole10945257": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ecs-tasks.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        }
      },
      "Metadata": {
        "aws:cdk:path": "mastergraphcluster-stack/alpha0/ExecutionRole/Resource"
      }
    },
    "alpha0ExecutionRoleDefaultPolicy4D11427B": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "logs:CreateLogStream",
                "logs:PutLogEvents"
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "alpha0alpha0mastergraphclusterContainerLogGroupE978ADBD",
                  "Arn"
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "alpha0ExecutionRoleDefaultPolicy4D11427B",
        "Roles": [
          {
            "Ref": "alpha0ExecutionRole10945257"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "mastergraphcluster-stack/alpha0/ExecutionRole/DefaultPolicy/Resource"
      }
    },
    "alpha0ServiceA4979B1C": {
      "Type": "AWS::ECS::Service",
      "Properties": {
        "Cluster": {
          "Ref": "mastergraphclusterEcsCluster77253BF4"
        },
        "DeploymentConfiguration": {
          "MaximumPercent": 200,
          "MinimumHealthyPercent": 50
        },
        "DesiredCount": 1,
        "EnableECSManagedTags": false,
        "LaunchType": "EC2",
        "NetworkConfiguration": {
          "AwsvpcConfiguration": {
            "AssignPublicIp": "DISABLED",
            "SecurityGroups": [
              {
                "Fn::GetAtt": [
                  "alpha0ServiceSecurityGroupF7B1AFC6",
                  "GroupId"
                ]
              }
            ],
            "Subnets": [
              {
                "Fn::ImportValue": "graplvpcs-stack:ExportsOutputRefGraplVPCPrivateSubnet1SubnetC6852983C267B947"
              },
              {
                "Fn::ImportValue": "graplvpcs-stack:ExportsOutputRefGraplVPCPrivateSubnet2SubnetDAF9D2E0F9C618F3"
              },
              {
                "Fn::ImportValue": "graplvpcs-stack:ExportsOutputRefGraplVPCPrivateSubnet3SubnetC625644E86F72BC2"
              }
            ]
          }
        },
        "SchedulingStrategy": "REPLICA",
        "ServiceRegistries": [
          {
            "RegistryArn": {
              "Fn::GetAtt": [
                "alpha0ServiceCloudmapService9ABD0DC9",
                "Arn"
              ]
            }
          }
        ],
        "TaskDefinition": {
          "Ref": "alpha0CA0EDE27"
        }
      },
      "Metadata": {
        "aws:cdk:path": "mastergraphcluster-stack/alpha0Service/Service"
      }
    },
    "alpha0ServiceCloudmapService9ABD0DC9": {
      "Type": "AWS::ServiceDiscovery::Service",
      "Properties": {
        "DnsConfig": {
          "DnsRecords": [
            {
              "TTL": 60,
              "Type": "A"
            }
          ],
          "NamespaceId": {
            "Fn::GetAtt": [
              "mastergraphclusterEcsClusterDefaultServiceDiscoveryNamespace826A7C54",
              "Id"
            ]
          },
          "RoutingPolicy": "MULTIVALUE"
        },
        "HealthCheckCustomConfig": {
          "FailureThreshold": 1
        },
        "Name": "alpha0",
        "NamespaceId": {
          "Fn::GetAtt": [
            "mastergraphclusterEcsClusterDefaultServiceDiscoveryNamespace826A7C54",
            "Id"
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "mastergraphcluster-stack/alpha0Service/CloudmapService/Resource"
      }
    },
    "alpha0ServiceSecurityGroupF7B1AFC6": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "mastergraphcluster-stack/alpha0Service/SecurityGroup",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1"
          }
        ],
        "SecurityGroupIngress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "from 0.0.0.0/0:ALL PORTS",
            "FromPort": 0,
            "IpProtocol": "tcp",
            "ToPort": 65535
          }
        ],
        "VpcId": {
          "Fn::ImportValue": "graplvpcs-stack:ExportsOutputRefGraplVPCD95366B5C69BF9D8"
        }
      },
      "Metadata": {
        "aws:cdk:path": "mastergraphcluster-stack/alpha0Service/SecurityGroup/Resource"
      }
    }
  },
  "Parameters": {
    "SsmParameterValueawsserviceecsoptimizedamiamazonlinux2recommendedimageidC96584B6F00A464EAD1953AFF4B05118Parameter": {
      "Type": "AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>",
      "Default": "/aws/service/ecs/optimized-ami/amazon-linux-2/recommended/image_id"
    }
  }
}